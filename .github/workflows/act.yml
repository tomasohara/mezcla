# Workflow for running check-in tests locally (e.g., via https://github.com/nektos/act)
#
# Note:
# - Invoked via tools/local-workflows.sh:
#   act --container-architecture linux/amd64 --pull="false" -P "ubuntu-latest=local/test-act" -W ./.github/workflows/act.yml
#

name: Act-Tests

on: [push, pull_request]

jobs:
  
  build-and-test-runner:
    name: Build and Run Tests via Runner
    # skip during local actions testing (see https://github.com/nektos/act#skipping-jobs)
    if: ${{ !github.event.act }}        

    runs-on: ${{ matrix.os }}
    strategy:
      # Note: The matrix is only for the GitHub runner VM. Separate support is needed
      # by the docker container.
      matrix:
        os: [ubuntu-latest]
        ## TODO: [3.8 ... 3.10]
        python-version: ["3.9"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure Environment
        run: |
          echo "PATH=$PATH" >> "$GITHUB_ENV"
          echo "PYTHONPATH=$PYTHONPATH:/usr/local/lib/python3.9/dist-packages" >> "$GITHUB_ENV"

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          pip install --verbose --requirement requirements.txt
          ## TEST: pip install --verbose --requirement non-binary-requirements.txt

      - name: Download data
        run: |
          python -m nltk.downloader -d "$HOME/nltk_data" punkt punkt_tab averaged_perceptron_tagger stopwords

      - name: Run Python Tests via Runner
        run: |
          PYTHONPATH="$(pwd):$PYTHONPATH" ./tools/run_tests.bash

      ## TODO:
      ## See https://github.com/tomasohara/shell-scripts/blob/main/tests/batspp_report.py
      ## - name: Run Bats-PP Alias Tests
      ##   run: |
      ##     PYTHONPATH="$(pwd):$PYTHONPATH" bash tests/summary_stats.bash

  build-and-test-docker:
    name: Build and Run Tests via Docker
    # include unless skip-docker set (see skip-docker.json)
    if: ${{ !github.event.skip-docker }}
    runs-on: [ubuntu-20.04]

    ## TEST:
    ## NOTE: following is for docker images on the hub
    ## container:
    ##   image: local/test-act
    ##   options: --user=root

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build docker image
        run: |
          docker build --tag mezcla-dev -f- . <Dockerfile

      - name: Run Python Tests under Docker
        run: |
          # note: command format: docker run [OPTIONS] IMAGE [COMMAND] [ARG...];
          # The environment file normally has no entries (i.e., just comments).
          docker run --env "DEBUG_LEVEL=5" --env-file _temp-user-docker.env --rm --mount type=bind,source="$(pwd)",target=/home/mezcla mezcla-dev
        env:
          DEBUG_LEVEL: 5
          # Note: to test a subset of notebook, define a regex pattern
          # ex: TEST_REGEX: "(README|testing-tips)"
          ## TODO: TEST_REGEX: pattern
          ## DEBUG: TEST_REGEX: README
          ## TEMP: TEST_REGEX: entropy
          ## TEST: TEST_REGEX: "$TEST_REGEX"
          DUMMY_VAR: 1
